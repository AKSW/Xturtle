/*
 * generated by Xtext
 */
package de.itemis.tooling.xturtle.ui;

import org.eclipse.jface.text.DefaultIndentLineAutoEditStrategy;
import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.xtext.resource.containers.IAllContainersState;
import org.eclipse.xtext.ui.editor.XtextEditor;
import org.eclipse.xtext.ui.editor.actions.IActionContributor;
import org.eclipse.xtext.ui.editor.autoedit.AbstractEditStrategyProvider;
import org.eclipse.xtext.ui.editor.findrefs.IReferenceFinder;
import org.eclipse.xtext.ui.editor.folding.IFoldingRegionProvider;
import org.eclipse.xtext.ui.editor.hover.IEObjectHoverProvider;
import org.eclipse.xtext.ui.editor.hyperlinking.IHyperlinkHelper;
import org.eclipse.xtext.ui.editor.preferences.IPreferenceStoreInitializer;
import org.eclipse.xtext.ui.editor.syntaxcoloring.AbstractAntlrTokenToAttributeIdMapper;
import org.eclipse.xtext.ui.editor.syntaxcoloring.IHighlightingConfiguration;
import org.eclipse.xtext.ui.editor.syntaxcoloring.ISemanticHighlightingCalculator;

import com.google.inject.Binder;
import com.google.inject.Provider;
import com.google.inject.name.Names;

import de.itemis.tooling.xturtle.ui.autoedit.TurtleAutoEditStrategyProvider;
import de.itemis.tooling.xturtle.ui.autoedit.TurtleNewLineAutoedit;
import de.itemis.tooling.xturtle.ui.findrefs.TurtleReferenceFinder;
import de.itemis.tooling.xturtle.ui.folding.TurtleFoldingActionContributor;
import de.itemis.tooling.xturtle.ui.folding.TurtleFoldingRegionProvider;
import de.itemis.tooling.xturtle.ui.hover.TurtleEObjectHoverProvider;
import de.itemis.tooling.xturtle.ui.hyperlinking.TurtleHyperlinkHelper;
import de.itemis.tooling.xturtle.ui.syntaxcoloring.TurtleHighlightingConfig;
import de.itemis.tooling.xturtle.ui.syntaxcoloring.TurtleHighlightingMapper;
import de.itemis.tooling.xturtle.ui.syntaxcoloring.TurtleSemanticHighlighter;

/**
 * Use this class to register components to be used within the IDE.
 */
public class XturtleUiModule extends de.itemis.tooling.xturtle.ui.AbstractXturtleUiModule {
	public XturtleUiModule(AbstractUIPlugin plugin) {
		super(plugin);
	}
	
	public Class <? extends AbstractAntlrTokenToAttributeIdMapper> bindTokenMapper(){
		return TurtleHighlightingMapper.class;
	}

	public Class<? extends IHyperlinkHelper> bindIHyperlinkHelper() {
		return TurtleHyperlinkHelper.class;
	}
	
	public Class<? extends IHighlightingConfiguration> bindHighlightingConfig(){
		return TurtleHighlightingConfig.class;
	}

	public Class<? extends ISemanticHighlightingCalculator> bindSemanticHighlighter(){
		return TurtleSemanticHighlighter.class;
	}

	public Class<? extends IEObjectHoverProvider> bindHoverProvider(){
		return TurtleEObjectHoverProvider.class;
	}

	public Class<? extends DefaultIndentLineAutoEditStrategy> bindAutoIndentStrategy(){
		return TurtleNewLineAutoedit.class;
	}

	public Class<? extends IReferenceFinder> bindReferenceFinder(){
		return TurtleReferenceFinder.class;
	}
	
	@Override
	public Provider<IAllContainersState> provideIAllContainersState() {
		return org.eclipse.xtext.ui.shared.Access.getWorkspaceProjectsState();
//		return org.eclipse.xtext.ui.shared.Access.getJavaProjectsState();
	}
	
	@Override
	public Class<? extends AbstractEditStrategyProvider> bindAbstractEditStrategyProvider() {
		return TurtleAutoEditStrategyProvider.class;
	}

	
	//Folding Start
	@Override
	public void configureBracketMatchingAction(Binder binder) {
		//actually we want to override the first binding only...
		binder.bind(IActionContributor.class).annotatedWith(Names.named("foldingActionGroup")).to( //$NON-NLS-1$
				TurtleFoldingActionContributor.class);
		binder.bind(IActionContributor.class).annotatedWith(Names.named("bracketMatcherAction")).to( //$NON-NLS-1$
				org.eclipse.xtext.ui.editor.bracketmatching.GoToMatchingBracketAction.class);
		binder.bind(IPreferenceStoreInitializer.class).annotatedWith(Names.named("bracketMatcherPrefernceInitializer")) //$NON-NLS-1$
				.to(org.eclipse.xtext.ui.editor.bracketmatching.BracketMatchingPreferencesInitializer.class);
		binder.bind(IActionContributor.class).annotatedWith(Names.named("selectionActionGroup")).to( //$NON-NLS-1$
				org.eclipse.xtext.ui.editor.selection.AstSelectionActionContributor.class);
	}

	public Class<? extends XtextEditor> bindEditor() {
		return TurtleXtextEditor.class;
	}
	public Class<? extends IFoldingRegionProvider> bindFoldingRegionProvider() {
		return TurtleFoldingRegionProvider.class;
	}
	//Folding Start

}
